apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  clusterIP: None
  selector:
    app: elastic-assignment
  ports:
  - name: transport
    port: 9300
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-lb
spec:
  selector:
    app: elastic-assignment
  ports:
  - name: http
    port: 80
    targetPort: 9200
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elastic-assignment-config
data:
  elasticsearch.yml: |
    cluster.name: elastic-assignment-cluster
    network.host: "0.0.0.0"
    bootstrap.memory_lock: false
    discovery.zen.ping.unicast.hosts: elastic-node-0.elastic-assignment.default.svc.cluster.local,elastic-node-1.elastic-assignment.default.svc.cluster.local,elastic-node-2.elastic-assignment.default.svc.cluster.local
    discovery.zen.minimum_master_nodes: 1
    xpack.security.enabled: false
    xpack.monitoring.enabled: false
  ES_JAVA_OPTS: -Xms512m -Xmx512m
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elastic-node
spec:
  replicas: 3
  serviceName: elastic-assignment-svc
  selector:
    matchLabels:
      app: elastic-assignment
  template:
    metadata:
      labels:
        app: elastic-assignment
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: init-container
        image: busybox
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
      containers:
      - name: elasticsearch
        resources:
            requests:
                memory: 1Gi
        securityContext:
          privileged: true
          runAsUser: 1000
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        env:
        - name: ES_JAVA_OPTS
          valueFrom:
              configMapKeyRef:
                  name: elastic-assignment-config
                  key: ES_JAVA_OPTS
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /
            port: 9200
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 3
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
            scheme: HTTP
          initialDelaySeconds: 360
          timeoutSeconds: 2
        ports:
        - containerPort: 9200
          name: elastic-http
        - containerPort: 9300
          name: elastic-tcp
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elastic-assignment-config
            items:
              - key: elasticsearch.yml
                path: elasticsearch.yml
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-confs
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
    
    }
    output {
        elasticsearch {
            hosts => [ "elasticsearch:9200" ]
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-assignment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:6.5.4
        ports:
        - containerPort: 5044
        volumeMounts:
          - name: conf-volume
            mountPath: /usr/share/logstash/config
          - name: data-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: conf-volume
        configMap:
          name: logstash-confs
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: data-volume
        configMap:
          name: logstash-confs
          items:
            - key: logstash.conf
              path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash-svc
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-assignment
  labels:
    app: kibana-assignment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana-assignment
  template:
    metadata:
      labels:
        app: kibana-assignment
    spec:
      containers:
      - name: kibana-assignment
        image: docker.elastic.co/kibana/kibana:6.5.4
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch:9200
          - name: XPACK_SECURITY_ENABLED
            value: "true"
        ports:
        - containerPort: 5601
          name: kibana-int
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-assignment
  labels:
    app: kibana-assignment
spec:
  selector:
    app: kibana-assignment
  ports:
  - port: 5601
    protocol: TCP
    targetPort: kibana-int
  type: LoadBalancer

